name: ci

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build-aarch64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - run: gem install fpm -v 1.10.2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            daemon/target
          key: ${{ runner.os }}-cargo-aarch64-${{ hashFiles('**/Cargo.lock') }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      - uses: marcopolo/cargo@master
        with:
          use-cross: true
          command: build
          args: --target aarch64-unknown-linux-gnu --features raspberry --release
          working-directory: daemon
      - run: cp -r daemon/target/aarch64-unknown-linux-gnu/release daemon/target
      - run: yarn install
      - run: yarn run build
      - run: yarn run dist-arm64
      - uses: actions/upload-artifact@v2
        with:
          name: pi-tool-deb-aarch64
          path: dist/*.deb
  build-armv7:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - run: gem install fpm -v 1.10.2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            daemon/target
          key: ${{ runner.os }}-cargo-armv7-${{ hashFiles('**/Cargo.lock') }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: armv7-unknown-linux-gnueabihf
          override: true
      - uses: marcopolo/cargo@master
        with:
          use-cross: true
          command: build
          args: --target armv7-unknown-linux-gnueabihf --features raspberry --release
          working-directory: daemon
      - run: cp -r daemon/target/armv7-unknown-linux-gnueabihf/release daemon/target
      - run: yarn install
      - run: yarn run build
      - run: yarn run dist-armv7l
      - uses: actions/upload-artifact@v2
        with:
          name: pi-tool-deb-armv7
          path: dist/*.deb
      
      
